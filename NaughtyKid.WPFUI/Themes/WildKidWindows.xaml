<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:NaughtyKid.WPFUI.Controls"
                    xmlns:ct="clr-namespace:NaughtyKid.WPFUI.Converters"
                    xmlns:wkui="clr-namespace:NaughtyKid.WPFUI"
                    xmlns:wdcommand="clr-namespace:NaughtyKid.WPFUI.Command"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell"
                   >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/NaughtyKid.WPFUI;component/Assets/NaughtyKidButton.xaml" />
        <ResourceDictionary Source="/NaughtyKid.WPFUI;component/Resource/NaughtyKidWindowsResource.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="WkWindowsBaseStyle" TargetType="controls:NaughtyKidWindows">
        <Setter Property="Width" Value="800" />
        <Setter Property="Height" Value="640" />
        <Setter Property="MinWidth" Value="400" />
        <Setter Property="MinHeight" Value="320" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="UseLayoutRounding" Value="True"></Setter>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="controls:NaughtyKidWindows">
                    <ControlTemplate.Resources>
                        <ct:BackgroundConverter x:Key="BackgroundConverter"></ct:BackgroundConverter>
                    </ControlTemplate.Resources>
                    <Border  x:Name="WindowBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"  Background="{TemplateBinding Background}" >
                        <Border.Resources>
                            <Storyboard x:Key="BackgroundAnimation">
                                <ColorAnimation Storyboard.TargetName="WindowBorderBackground" Storyboard.TargetProperty="Color" To="{DynamicResource WindowBackgroundColor}" Duration="0:0:.6" />
                            </Storyboard>
                        </Border.Resources>

                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                            <AdornerDecorator>
                                <Grid x:Name="LayoutRoot">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <!-- 标题栏 -->
                                    <Grid Grid.Row="0" Width="Auto" Background="{TemplateBinding TitleColor}" Name="TitleGrid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="1*"/>
                                        </Grid.ColumnDefinitions>
                                         <!--标题 and 图标-->
                                        <StackPanel Grid.Column="0" Orientation="Horizontal" >
                                            <Image Stretch="UniformToFill" Source="{TemplateBinding Icon}"  Margin="2"></Image>
                                            <TextBlock  HorizontalAlignment="Left" VerticalAlignment="Center" Text="{TemplateBinding Title}" FontSize="{TemplateBinding TitleSize}" Foreground="{TemplateBinding TitleForeground}" Margin="0"></TextBlock>
                                        </StackPanel>
                                         <!--系统按键-->
                                        <WrapPanel Grid.Column="1" HorizontalAlignment="Right" Margin="0" VerticalAlignment="Stretch" >
                                            <Button x:Name="ToolsButton"   ToolTip="{x:Static wkui:Resources.ToolsButton }" Style="{StaticResource SystemButton}" shell:WindowChrome.IsHitTestVisibleInChrome="True" Width="{TemplateBinding SystemButtonWidth}" Height="{TemplateBinding SystemButtonHeight}" Margin="{TemplateBinding SystemButtonMargin}" Command="{Binding Source={x:Static wdcommand:NaughtyKidWindowsCommand.SettingWindowCommand}}" Content="{StaticResource wkWindowsTool}" />
                                            <Button x:Name="MinButton"     ToolTip="{x:Static wkui:Resources.Minimize}"     Style="{StaticResource SystemButton}" shell:WindowChrome.IsHitTestVisibleInChrome="True" Width="{TemplateBinding SystemButtonWidth}" Height="{TemplateBinding SystemButtonHeight}" Margin="{TemplateBinding SystemButtonMargin}" Command="{Binding Source={x:Static shell:SystemCommands.MinimizeWindowCommand}}"   Content="{StaticResource wkWindowsMin}" />
                                            <Button x:Name="MaxButton"     ToolTip="{x:Static wkui:Resources.Maximize}"     Style="{StaticResource SystemButton}" shell:WindowChrome.IsHitTestVisibleInChrome="True" Width="{TemplateBinding SystemButtonWidth}" Height="{TemplateBinding SystemButtonHeight}" Margin="{TemplateBinding SystemButtonMargin}" Command="{Binding Source={x:Static shell:SystemCommands.MaximizeWindowCommand}}"   Content="{StaticResource wkWindowsMax}" />
                                            <Button x:Name="RestoreButton" ToolTip="{x:Static wkui:Resources.Restore}"      Style="{StaticResource SystemButton}" Visibility="Collapsed" shell:WindowChrome.IsHitTestVisibleInChrome="True"  Width="{TemplateBinding SystemButtonWidth}" Height="{TemplateBinding SystemButtonHeight}" Margin="{TemplateBinding SystemButtonMargin}" Command="{Binding Source={x:Static shell:SystemCommands.RestoreWindowCommand}}" Content="{StaticResource wkWindowsRestore}" />
                                            <Button x:Name="ClosedButton"  ToolTip="{x:Static wkui:Resources.Close}"        Style="{StaticResource SystemCloseButton}" shell:WindowChrome.IsHitTestVisibleInChrome="True" Width="{TemplateBinding SystemButtonWidth}" Height="{TemplateBinding SystemButtonHeight}" Margin="{TemplateBinding SystemButtonMargin}" Command="{Binding Source={x:Static shell:SystemCommands.CloseWindowCommand}}" Content="{StaticResource wkWindowsClosed}"/>
                                        </WrapPanel>
                                    </Grid>

                                    <Grid Grid.Row="1">
                                        <AdornerDecorator>
                                            <ContentPresenter/>
                                        </AdornerDecorator>
                                        <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Visible" VerticalAlignment="Bottom"/>
                                    </Grid>
                                </Grid>
                            </AdornerDecorator>
                        </Border>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource WindowBorderActive}" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="MaxButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="RestoreButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="LayoutRoot" Property="Margin" Value="7" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="MaxButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="RestoreButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                                <Condition Property="WindowState" Value="Normal"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CornerRadius="0" GlassFrameThickness="1" />
            </Setter.Value>
        </Setter>
        
    </Style>


</ResourceDictionary>